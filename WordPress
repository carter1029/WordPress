#!/bin/bash

# 检查是否以 root 用户运行
if [ "$(id -u)" != "0" ]; then
    echo "请以 root 用户运行此脚本"
    exit 1
fi

# 检测 Linux 发行版
DISTRO=""
if [ -f /etc/os-release ]; then
    . /etc/os-release
    DISTRO=$ID
fi

case $DISTRO in
    ubuntu|debian)
        PKG_MANAGER="apt-get"
        PHP_SERVICE="php7.4-fpm"
        ;;
    centos|rhel|fedora)
        PKG_MANAGER="yum"
        PHP_SERVICE="php-fpm"
        ;;
    *)
        echo "不支持的 Linux 发行版: $DISTRO"
        exit 1
        ;;
esac

install_dir="/var/www/html"
db_name="wp$(date +%s)"
db_user="$db_name"
db_password=$(openssl rand -base64 12)
mysqlrootpass=$(openssl rand -base64 12)

# 检查并创建安装目录
if [ ! -d "$install_dir" ]; then
    echo "安装目录 $install_dir 不存在，正在创建..."
    mkdir -p "$install_dir"
else
    echo "安装目录 $install_dir 已存在"
fi

# 询问用户输入域名和电子邮件地址
read -p "请输入您的域名: " domain_name
read -p "请输入您的电子邮件地址（用于注册 Let's Encrypt 账号）: " user_email

# 验证域名和电子邮件地址格式
if ! [[ $domain_name =~ ^[a-zA-Z0-9.-]+$ ]]; then
    echo "域名格式错误。"
    exit 1
fi

if ! [[ $user_email =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$ ]]; then
    echo "电子邮件地址格式错误。"
    exit 1
fi

# 安装 Nginx
install_nginx() {
    echo "正在安装 Nginx..."
    if [ "$DISTRO" = "centos" ] || [ "$DISTRO" = "rhel" ] || [ "$DISTRO" = "fedora" ]; then
        # 安装 EPEL 仓库
        $PKG_MANAGER install -y epel-release
    fi
    $PKG_MANAGER update -y
    $PKG_MANAGER install -y nginx
    systemctl enable nginx
    systemctl start nginx
}

# 配置 Nginx
configure_nginx() {
    echo "正在配置 Nginx..."
    cat > /etc/nginx/nginx.conf <<EOF
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '\$remote_addr - \$remote_user [\$time_local] "\$request" '
                      '\$status \$body_bytes_sent "\$http_referer" '
                      '"\$http_user_agent" "\$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  $domain_name;
        root         $install_dir;

        location / {
            try_files \$uri \$uri/ /index.php?\$args;
        }

        location ~ \.php\$ {
            fastcgi_pass unix:/var/run/php/$PHP_SERVICE.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
            include fastcgi_params;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}
EOF
    systemctl restart nginx
}

# 安装 MySQL
install_mysql() {
    echo "正在安装 MySQL..."
    if [ "$DISTRO" = "ubuntu" ] || [ "$DISTRO" = "debian" ]; then
        $PKG_MANAGER install -y mysql-server mysql-client
        systemctl enable mysql
        systemctl start mysql
    elif [ "$DISTRO" = "centos" ] || [ "$DISTRO" = "rhel" ] || [ "$DISTRO" = "fedora" ]; then
        $PKG_MANAGER install -y mariadb-server mariadb
        systemctl enable mariadb
        systemctl start mariadb
    fi
    mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '$mysqlrootpass'; FLUSH PRIVILEGES;"

    cat > "$mysql_config_file" <<EOF
[client]
user=root
password=$mysqlrootpass
EOF
    chmod 640 "$mysql_config_file"
}

# 安装 PHP
install_php() {
    echo "正在安装 PHP..."
    if [ "$DISTRO" = "ubuntu" ] || [ "$DISTRO" = "debian" ]; then
        $PKG_MANAGER install -y php-fpm php-mysql
    elif [ "$DISTRO" = "centos" ] || [ "$DISTRO" = "rhel" ] || [ "$DISTRO" = "fedora" ]; then
        $PKG_MANAGER install -y php php-fpm php-mysql
    fi
    systemctl enable $PHP_SERVICE
    systemctl start $PHP_SERVICE
}

# 安装 acme.sh
install_acme_sh() {
    echo "正在安装 acme.sh..."
    curl https://get.acme.sh | sh
    source ~/.bashrc
}

# 安装 socat
install_socat() {
    echo "正在安装 socat..."
    $PKG_MANAGER install -y socat
}

# 注册 Let's Encrypt 账号
register_letsencrypt() {
    echo "正在注册 Let's Encrypt 账号..."
    ~/.acme.sh/acme.sh --register-account -m $user_email --server letsencrypt
}

# 生成 SSL 证书
generate_ssl_certificate() {
    echo "正在为 $domain_name 生成 SSL 证书..."

    # 检查证书是否已存在
    if [ -f "$install_dir/$domain_name.key" ] && [ -f "$install_dir/$domain_name.cer" ]; then
        echo "证书已存在，跳过生成步骤"
    else
        # 停止 nginx 以允许 acme.sh 使用端口 80
        systemctl stop nginx

        # 生成证书
        ~/.acme.sh/acme.sh --issue --standalone -d $domain_name --server letsencrypt
        if [ $? -ne 0 ]; then
            echo "SSL 证书生成失败"
            exit 1
        fi

        # 安装证书
        ~/.acme.sh/acme.sh --install-cert -d $domain_name \
            --key-file       $install_dir/$domain_name.key  \
            --fullchain-file $install_dir/$domain_name.cer \
            --reloadcmd     "systemctl restart nginx"
    fi

    # 启动 nginx
    systemctl start nginx
}

# 安装和配置 WordPress
install_wordpress() {
    echo "正在安装 WordPress 中文版..."
    wget -O /tmp/latest-zh_CN.tar.gz https://cn.wordpress.org/latest-zh_CN.tar.gz
    tar -C "$install_dir" -zxf /tmp/latest-zh_CN.tar.gz --strip-components=1
    cp "$install_dir/wp-config-sample.php" "$install_dir/wp-config.php"
    sed -i "s/database_name_here/$db_name/g" "$install_dir/wp-config.php"
    sed -i "s/username_here/$db_user/g" "$install_dir/wp-config.php"
    sed -i "s/password_here/$db_password/g" "$install_dir/wp-config.php"
    wget -O - https://api.wordpress.org/secret-key/1.1/salt/ >> "$install_dir/wp-config.php"
    mysql -u root -e "CREATE DATABASE $db_name; CREATE USER '$db_user'@'localhost' IDENTIFIED BY '$db_password'; GRANT ALL PRIVILEGES ON $db_name.* TO '$db_user'@'localhost'; FLUSH PRIVILEGES;"
}

# 主安装流程
install_nginx
configure_nginx
install_mysql
install_php
install_wordpress
install_acme_sh
install_socat
register_letsencrypt
generate_ssl_certificate

# 输出安装信息
echo "WordPress 安装完成。"
echo "数据库名称：$db_name"
echo "数据库用户：$db_user"
echo "数据库密码：$db_password"
echo "MySQL root 密码：$mysqlrootpass"
echo "nginx配置文件 /etc/nginx/nginx.conf"
echo "数据库配置文件 /root/.my.cnf"
echo "站点目录 $install_dir"
